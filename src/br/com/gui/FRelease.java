/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.gui;

import java.awt.Cursor;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JOptionPane;
import javax.swing.JProgressBar;
import javax.swing.table.DefaultTableModel;

import br.com.bean.Release;
import br.com.bo.ExecutaDeploy;
import br.com.bo.VerificaUltimaReleasesFiliais;
import br.com.constantes.TodasAsLojas;
import br.com.utilitarios.TesteComunicacao;
import net.sf.jasperreports.engine.JRException;

/**
 * @author wev
 */
public class FRelease extends javax.swing.JDialog {

    TodasAsLojas tlojas = new TodasAsLojas();
    ArrayList<String> lojas = tlojas.ListaLojas();
//	private String releaseBaixada;
//	private String releaseAplicada;
//	private String lojaRelease;
//	private List<String> listaRelease;

    Release release = new Release();
//	

    /**
     * Creates new form FReleaseNew
     */
    public FRelease(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanelPrincipal = new javax.swing.JPanel();
        jPanelLoja = new javax.swing.JPanel();
        jLabelLojas = new javax.swing.JLabel();
        jComboBoxListaLoja = new javax.swing.JComboBox();
        jScrollPaneRelease = new javax.swing.JScrollPane();
        jTableRelease = new javax.swing.JTable();
        jPanelButao = new javax.swing.JPanel();
        jToggleButtonGeraRelease = new javax.swing.JToggleButton();
        jButtonBaixaRelease = new javax.swing.JButton();
        jToggleButtonFechaJanela = new javax.swing.JToggleButton();
        jButtonExecutaDeploy = new javax.swing.JButton();
        jButtonImprimir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanelPrincipal.setBorder(javax.swing.BorderFactory.createTitledBorder("Gera Release"));

        jPanelLoja.setLayout(new javax.swing.BoxLayout(jPanelLoja, javax.swing.BoxLayout.LINE_AXIS));

        jLabelLojas.setText("Lojas");
        jPanelLoja.add(jLabelLojas);

        for(int i =0; i < lojas.size(); i++){
            jComboBoxListaLoja.addItem(lojas.get(i));
        }
        jComboBoxListaLoja.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBoxListaLojaKeyPressed(evt);
            }
        });
        jPanelLoja.add(jComboBoxListaLoja);

        jTableRelease.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Loja", "Baixada", "Apicada"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableRelease.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableReleaseMouseClicked(evt);
            }
        });
        jScrollPaneRelease.setViewportView(jTableRelease);

        jPanelButao.setLayout(new java.awt.GridBagLayout());

        jToggleButtonGeraRelease.setMnemonic('v');
        jToggleButtonGeraRelease.setText("Ver Releases");
        jToggleButtonGeraRelease.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonGeraReleaseActionPerformed(evt);
            }
        });
        jPanelButao.add(jToggleButtonGeraRelease, new java.awt.GridBagConstraints());

        jButtonBaixaRelease.setText("Baixar Release");
        jButtonBaixaRelease.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBaixaReleaseActionPerformed(evt);
            }
        });
        jPanelButao.add(jButtonBaixaRelease, new java.awt.GridBagConstraints());

        jToggleButtonFechaJanela.setMnemonic('f');
        jToggleButtonFechaJanela.setText("Fechar Janela");
        jToggleButtonFechaJanela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonFechaJanelaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        jPanelButao.add(jToggleButtonFechaJanela, gridBagConstraints);

        jButtonExecutaDeploy.setText("Exec. Deploy");
        jButtonExecutaDeploy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExecutaDeployActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        jPanelButao.add(jButtonExecutaDeploy, gridBagConstraints);

        jButtonImprimir.setText("Imprimir");
        jButtonImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButtonImprimirActionPerformed(evt);
                } catch (JRException e) {
                    e.printStackTrace();
                }
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        jPanelButao.add(jButtonImprimir, gridBagConstraints);

        javax.swing.GroupLayout jPanelPrincipalLayout = new javax.swing.GroupLayout(jPanelPrincipal);
        jPanelPrincipal.setLayout(jPanelPrincipalLayout);
        jPanelPrincipalLayout.setHorizontalGroup(
            jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelLoja, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPaneRelease)
            .addComponent(jPanelButao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanelPrincipalLayout.setVerticalGroup(
            jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPrincipalLayout.createSequentialGroup()
                .addComponent(jPanelLoja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPaneRelease, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelButao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButtonFechaJanelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonFechaJanelaActionPerformed
        dispose();
    }//GEN-LAST:event_jToggleButtonFechaJanelaActionPerformed

    @SuppressWarnings("static-access")
    private void jToggleButtonGeraReleaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonGeraReleaseActionPerformed

        String Todas = "TODAS";

        String lojaComParametros = null;
        VerificaUltimaReleasesFiliais verificaRelease = new VerificaUltimaReleasesFiliais();
        DefaultTableModel val = (DefaultTableModel) jTableRelease.getModel();
        TesteComunicacao comunicacao = new TesteComunicacao();
        val.setNumRows(0);
        int qtdloja = 0;

        //TODO : Verifica a quantidade de lojas
        if (jComboBoxListaLoja.getSelectedItem().toString() == Todas) {
            for (int i = 0; i < lojas.size(); i++) {
                qtdloja = i++;
            }
        }
        int retorno = JOptionPane.showConfirmDialog(null, "Gerar Release me modo Lista ? ","",JOptionPane.YES_NO_OPTION);
        TodasAsLojas tlojas = new TodasAsLojas();
        ArrayList<String> lojas = tlojas.ListaLojas();
        if (retorno == 1) {
            if (jComboBoxListaLoja.getSelectedItem().toString() == Todas) {
                for (int i = 0; i < lojas.size(); i++) {
                    String loja = lojas.get(i);
                    if (loja == "TODAS") {
                        continue;
                    } else {
                        if (loja.equals("AMT")) {
                            loja = "ALT";
                        } else if (loja.equals("SAA")) {
                            loja = "STA";
                        }
                            if (comunicacao.isOnLine(loja.toLowerCase()) == true) {
                                if (loja.equals("ALT")) {
                                    lojaComParametros = verificaRelease.verRelease(loja, qtdloja);
                                } else {
                                    lojaComParametros = verificaRelease.verRelease(lojas.get(i), qtdloja);
                                    if (lojaComParametros != null) {
                                        String[] result = lojaComParametros.split(",");
                                        val.addRow(new String[]{result[0], result[1], result[2]});
                                        release.setLoja(result[0]);
                                        release.setReleaseBaixada(result[1]);
                                        release.setReleaseAplicada(result[2]);

                                    } else {
                                        val.addRow(new String[]{loja, "null", "null"});
                                        release.setLoja(loja);
                                        release.setReleaseBaixada("null");
                                        release.setReleaseAplicada("null");

                                    }
                                }
                            } else {
                                val.addRow(new String[]{loja, "OFF LINE", "OFF LINE"});
                                release.setLoja(loja);
                                release.setReleaseBaixada("OFF LINE");
                                release.setReleaseAplicada("OFF LINE");
                            }

                    }

                }
            } else {
                String loja = jComboBoxListaLoja.getSelectedItem().toString();
                qtdloja = 1;
                int column;

                if (loja.equals("AMT")) {
                    loja = "ALT";
                } else if (loja.equals("SAA")) {
                    loja = "STA";
                }
                if (comunicacao.isOnLine(loja) == true) {
                    lojaComParametros = verificaRelease.verRelease(loja, qtdloja);
                    if (lojaComParametros != null) {
                        String[] result = lojaComParametros.split(",");
                        val.addRow(new String[]{result[0], result[1], result[2]});
                        release.setLoja(result[0]);
                        release.setReleaseBaixada(result[1]);
                        release.setReleaseAplicada(result[2]);

                    } else {
                        val.addRow(new String[]{loja, "null", "null"});
                        release.setLoja(loja);
                        release.setReleaseBaixada("null");
                        release.setReleaseAplicada("null");

                    }
                } else {
                    val.addRow(new String[]{loja, "OFF LINE", "OFF LINE"});
                    release.setLoja(loja);
                    release.setReleaseBaixada("OFF LINE");
                    release.setReleaseAplicada("OFF LINE");
                }
            }
        } else {
            String loja = null;
            if (jComboBoxListaLoja.getSelectedItem().toString() == "TODAS"){

                for (int i = 0; i < lojas.size(); i++){
                    loja = lojas.get(i);
                    System.out.println(loja);
                    if (loja != "TODAS"){
                        verificaRelease.executaReleaseList(loja);
                    }else{
                        continue;
                    }
                }
            }else{
                List<String> listaRetorno = verificaRelease.executaReleaseList("sco"+jComboBoxListaLoja.getSelectedItem().toString().toLowerCase());
                for (String lista : listaRetorno){
                    System.out.println(lista);
                }

            }


        }


    }//GEN-LAST:event_jToggleButtonGeraReleaseActionPerformed

    private void jButtonBaixaReleaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBaixaReleaseActionPerformed

        String Todas = "TODAS";
        VerificaUltimaReleasesFiliais verificaRelease = new VerificaUltimaReleasesFiliais();
        DefaultTableModel val = (DefaultTableModel) jTableRelease.getModel();
        val.setNumRows(0);
        int qtdloja = 0;

        if (jComboBoxListaLoja.getSelectedItem().toString() == Todas) {
//			TodasAsLojas tlojas = new TodasAsLojas();
//			ArrayList<String> lojas = tlojas.ListaLojas();
            for (int i = 0; i < lojas.size(); i++) {
                qtdloja = i++;
            }
        }
        if (jComboBoxListaLoja.getSelectedItem().toString() == Todas) {
            TodasAsLojas tlojas = new TodasAsLojas();
            ArrayList<String> lojas = tlojas.ListaLojas();
            for (int i = 0; i < lojas.size(); i++) {
                String loja = lojas.get(i);
                verificaRelease.BaixarRelease(lojas.get(i), qtdloja);


            }
        } else {
            String loja = jComboBoxListaLoja.getSelectedItem().toString();
            qtdloja = 1;
            int column;
            verificaRelease.BaixarRelease(loja, qtdloja);
            JOptionPane.showMessageDialog(null, "Foi finalizado a Baixa da Release!");
        }
    }//GEN-LAST:event_jButtonBaixaReleaseActionPerformed

    private void jButtonExecutaDeployActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExecutaDeployActionPerformed
        // TODO add your handling code here:
        try {
            ExecutaDeploy executaDaploy = new ExecutaDeploy();
            if (!jComboBoxListaLoja.getSelectedItem().toString().isEmpty()) {
                executaDaploy.deploy(jComboBoxListaLoja.getSelectedItem().toString());
                JOptionPane.showMessageDialog(null, "Deploy Finalizado!");

            } else if ((boolean) jTableRelease.getValueAt(jTableRelease.getSelectedRow(), 0) == true) {
                System.out.println(jTableRelease.getValueAt(jTableRelease.getSelectedRow(), 0));

            } else {
                JOptionPane.showMessageDialog(null, "Você Tem Que Informar a Loja!");
            }

        } catch (Exception e) {
            System.out.println("Erro ..." + e);
            e.printStackTrace();
        }


    }//GEN-LAST:event_jButtonExecutaDeployActionPerformed

    private void jButtonImprimirActionPerformed(java.awt.event.ActionEvent evt) throws JRException {//GEN-FIRST:event_jButtonImprimirActionPerformed
//    
//    	Collection<String> resultado = new ArrayList<String>();
//    			resultado.add(release.getLoja());
//    			resultado.add(release.getReleaseBaixada());
//    			resultado.add(release.getReleaseAplicada());

    	/*
    	List<Release> resultado =(List<Release>) jTableRelease.getValueAt(jTableRelease.getSelectedRow(), 0);

    			
    	InputStream path_relatorio = this.getClass().getResourceAsStream("/br/com/report/release001.jasper"); 
    	JRBeanCollectionDataSource datasource = new JRBeanCollectionDataSource(resultado);
		JasperPrint jasperPrint = JasperFillManager.fillReport(path_relatorio, null, datasource);
		JasperViewer jasprViewer = new JasperViewer(jasperPrint , false);
		Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
		jasprViewer.setSize(dimension);
		jasprViewer.setVisible(true); */
//    	imp.impressaoSO();

        BarraDeProgresso();
    }//GEN-LAST:event_jButtonImprimirActionPerformed

    private void jComboBoxListaLojaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxListaLojaKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jToggleButtonGeraRelease.requestFocus();
        }
    }//GEN-LAST:event_jComboBoxListaLojaKeyPressed

    private void jTableReleaseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableReleaseMouseClicked
        // TODO add your handling code here:
        FDeployRelease fDeployRelease = new FDeployRelease(null, rootPaneCheckingEnabled);
        fDeployRelease.setVisible(true);


    }//GEN-LAST:event_jTableReleaseMouseClicked


    public void BarraDeProgresso() {

        try {
            JProgressBar progresso = new JProgressBar();
            setSize(300, 70);
            add(progresso);
            setLocationRelativeTo(null);
            setCursor(new Cursor(Cursor.WAIT_CURSOR));
            setVisible(true);
            progresso.setToolTipText("Aguarde...");
            for (int i = 0; i < 100; i++) {
                progresso.setValue(i);
                Thread.sleep(100);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FRelease.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FRelease.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FRelease.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FRelease.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FRelease dialog = new FRelease(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBaixaRelease;
    private javax.swing.JButton jButtonExecutaDeploy;
    private javax.swing.JButton jButtonImprimir;
    private javax.swing.JComboBox jComboBoxListaLoja;
    private javax.swing.JLabel jLabelLojas;
    private javax.swing.JPanel jPanelButao;
    private javax.swing.JPanel jPanelLoja;
    private javax.swing.JPanel jPanelPrincipal;
    private javax.swing.JScrollPane jScrollPaneRelease;
    private javax.swing.JTable jTableRelease;
    private javax.swing.JToggleButton jToggleButtonFechaJanela;
    private javax.swing.JToggleButton jToggleButtonGeraRelease;
    // End of variables declaration//GEN-END:variables


}
